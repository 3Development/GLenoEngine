//
// Created by leno on 4/18/23.
//

#ifndef LENOENGINE_VAOVBO_H
#define LENOENGINE_VAOVBO_H
#include "core/gl/enums/glenums.h"
#include <string.h>
#include "GL/glew.h"
#include "GLFW/glfw3.h"

#define UNBOUND_BUFFER 0

/**
 * Holds information about one VBO
 * id is the id generated by Opengl
 * attrName is predefined, there should be MACROS or some constants
 */
struct VBO{
    unsigned int id;
    VboVaoEnums::VboAttributeType attributeType;
};

/**
 * Holds information about one VAO
 * One VAO can have refrence to many VBO's
 * id is id that is generated by Opengl
 * Number at the end signalize how many VBO's can this vao have or how many attributes like position,color,normal
 */
struct VAO_5{
    const unsigned int id;
    VBO vbos[5];
};



/**
 * It generates and buffers the data
 * It also unbinds the buffer with that id
 * @param vao
 * @param data
 * @param sizeofDataInBytes
 * @param targetBuffer
 * @param typeOfData
 * @param attributeType
 * @param indexAttribPointer
 * @param numOfVerticesComponents
 * @param stride
 */
void initializeVboObjectAndBufferData(VAO_5* vao,
                                      const void* data,
                                      int sizeofDataInBytes ,
                                      GLenum targetBuffer,
                                      GLenum typeOfData,
                                      VboVaoEnums::VboAttributeType attributeType,
                                      int indexAttribPointer,
                                      int numOfVerticesComponents,
                                      float stride
);

/**
 * Initialize empty vao - array
 * This vao can store up to 5 vbo's or attributes
 * @param vao
 * @param active -> default is set to true
 */
void initializeVao5Object(void* vao,bool active=true);

/**
 * Activates vao with id in struct. Meaning when drawing opengl will use that vao
 * @param vao
 */
void activateVao(VAO_5* vao);

/**
 * Deactivates all vao's it sets binding to 0
 * @param vao
 */
void deactivateVao();

#endif //LENOENGINE_VAOVBO_H
